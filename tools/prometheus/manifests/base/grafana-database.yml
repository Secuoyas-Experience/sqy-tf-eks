# custom
apiVersion: v1
kind: Secret
metadata:
  name: grafana-database-secret
  namespace: monitoring
type: Opaque
data:
  db_username: Z3JhZmFuYQ==
  db_password: Z3JhZmFuYQ==

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-database-pvc
  namespace: monitoring
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-database
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana-database
  template:
    metadata:
      labels:
        app: grafana-database
    spec:
      volumes:
      - name: grafana-database-disk
        persistentVolumeClaim:
          claimName: grafana-database-pvc
      containers:
      - name: grafana-database
        image: postgres:14-bullseye
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data"
            name: grafana-database-disk
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: grafana-database-secret
                key: db_username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana-database-secret
                key: db_password
          - name: POSTGRES_DB
            value: grafana
          - name: POSTGRES_HOST_AUTH_METHOD
            value: md5
        ports:
        - containerPort: 5432

---

apiVersion: v1
kind: Service
metadata:
  name: grafana-database
  namespace: monitoring
spec:
  selector:
    app: grafana-database
  ports:
  - port: 5432
    targetPort: 5432
