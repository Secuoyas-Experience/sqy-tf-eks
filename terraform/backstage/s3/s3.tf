locals {
  bucket_name = "toolbox-backstage-techdocs"
}

##################################
########## CREATE BUCKET #########
##################################

resource "aws_s3_bucket" "backstage_bucket" {
  bucket = local.bucket_name

  tags = {
    Organization = "Toolbox"
    Name         = local.bucket_name
    Description  = "static documentation generated by techdocs"
  }
}

resource "aws_s3_bucket_versioning" "bucket_versioning" {
  bucket = aws_s3_bucket.backstage_bucket.bucket
  versioning_configuration { status = "Disabled" }
}

resource "aws_s3_bucket_public_access_block" "block_state_public_access" {
  bucket                  = aws_s3_bucket.backstage_bucket.id
  block_public_acls       = true
  block_public_policy     = true
  ignore_public_acls      = true
  restrict_public_buckets = true
}

data "aws_iam_policy_document" "backstage_s3_bucket_policy_document" {
  statement {
    effect    = "Allow"
    actions   = ["s3:ListBucket"]
    resources = ["${aws_s3_bucket.backstage_bucket.arn}"]

    principals {
      type        = "AWS"
      identifiers = [data.aws_caller_identity.current.account_id]
    }
  }
  statement {
    effect    = "Allow"
    actions   = ["s3:GetObject", "s3:DeleteObject", "s3:PutObject"]
    resources = ["${aws_s3_bucket.backstage_bucket.arn}/*"]

    principals {
      type        = "AWS"
      identifiers = [data.aws_caller_identity.current.account_id]
    }
  }
}

resource "aws_s3_bucket_policy" "backstage_s3_bucket_policy" {
  bucket = aws_s3_bucket.backstage_bucket.id
  policy = data.aws_iam_policy_document.backstage_s3_bucket_policy_document.json
}

